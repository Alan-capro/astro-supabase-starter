---
import Layout from "../components/Layout.astro";
---

<Layout title="生日快乐，我的宝贝 💕">
  <!-- 主容器 -->
  <div id="app" class="min-h-screen relative overflow-hidden">
    <!-- 背景渐变 -->
    <div class="absolute inset-0 bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50"></div>
    
    <!-- 进度指示器 -->
    <div class="absolute top-6 left-1/2 transform -translate-x-1/2 z-20">
      <div class="flex items-center space-x-2 bg-white/80 backdrop-blur-sm rounded-full px-4 py-2 shadow-lg">
        <span id="currentStep" class="text-sm font-medium text-gray-700">1</span>
        <span class="text-gray-400">/</span>
        <span class="text-sm text-gray-500">5</span>
      </div>
    </div>
    
    <!-- 步骤容器 -->
    <div id="stepContainer" class="relative z-10 min-h-screen flex items-center justify-center">
      
      <!-- 步骤1: 欢迎页面 -->
      <div class="step active" data-step="1">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <!-- 心跳图标 -->
          <div class="mb-8">
            <div class="inline-block animate-heartbeat">
              <div class="w-20 h-20 mx-auto bg-gradient-to-r from-red-400 to-pink-500 rounded-full flex items-center justify-center shadow-xl">
                <span class="text-white text-3xl">💖</span>
              </div>
            </div>
          </div>
          
          <!-- 名字和标题 -->
          <h1 class="text-responsive-lg font-bold text-gray-900 mb-4">
            生日快乐，<span class="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">我的宝贝</span>
          </h1>
          
          <p class="text-responsive text-gray-600 mb-12 max-w-2xl mx-auto leading-relaxed">
            愿你的每一天都像今天一样特别，愿你的笑容永远如阳光般灿烂
          </p>
          
          <!-- 开始按钮 -->
          <button id="startBtn" class="gradient-button px-8 py-4 text-lg rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300">
            🎁 开始我们的特别之旅
          </button>
        </div>
      </div>
      
      <!-- 步骤2: 我们的故事 -->
      <div class="step" data-step="2">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <div class="glass-morphism rounded-3xl p-8 md:p-12">
            <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-6">
              给最特别的你
            </h2>
            <p class="text-lg md:text-xl text-gray-700 leading-relaxed mb-8">
              从我们相遇的那一天起，每一天都因为你而变得特别。<br>
              今天是你专属的日子，愿所有的美好都围绕着你。
            </p>
            
            <!-- 日期和天数 -->
            <div class="flex flex-col md:flex-row justify-center items-center gap-8 text-gray-600">
              <div class="text-center">
                <div class="text-2xl font-bold text-blue-600" id="currentDate"></div>
                <div class="text-sm">今天</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-pink-600" id="daysTogether"></div>
                <div class="text-sm">在一起的天数</div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- 步骤3: 许愿环节 -->
      <div class="step" data-step="3">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-12">
            许个愿吧
          </h2>
          
          <!-- 3D 蛋糕 -->
          <div class="relative mb-12">
            <div id="cake" class="w-48 h-48 mx-auto relative cursor-pointer">
              <!-- 蛋糕主体 -->
              <div class="absolute bottom-0 w-full h-32 bg-gradient-to-t from-amber-300 to-amber-200 rounded-t-3xl shadow-xl">
                <!-- 蜡烛 -->
                <div id="candle" class="absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-4 w-2 h-8 bg-gradient-to-t from-red-500 to-pink-400 rounded-full">
                  <div id="flame" class="absolute -top-2 left-1/2 transform -translate-x-1/2 w-3 h-3 bg-gradient-to-t from-yellow-400 to-orange-400 rounded-full opacity-0 transition-opacity duration-300"></div>
                </div>
              </div>
              
              <!-- 蛋糕装饰 -->
              <div class="absolute top-8 left-1/2 transform -translate-x-1/2 w-40 h-6 bg-gradient-to-t from-pink-300 to-pink-200 rounded-full"></div>
            </div>
            
            <p class="text-gray-600 mt-6">点击点燃蜡烛，长按吹气熄灭</p>
          </div>
          
          <!-- 愿望文字 -->
          <div class="glass-morphism rounded-2xl p-8">
            <p class="text-lg text-gray-700">
              闭上眼睛，许下你的生日愿望<br>
              愿所有的美好都能实现 ✨
            </p>
          </div>
        </div>
      </div>
      
      <!-- 步骤4: 拆礼物 -->
      <div class="step" data-step="4">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-12">
            拆开你的礼物
          </h2>
          
          <!-- 礼盒 -->
          <div class="relative mb-12">
            <div id="giftBox" class="w-64 h-64 mx-auto relative cursor-pointer">
              <!-- 礼盒主体 -->
              <div class="absolute inset-0 bg-gradient-to-br from-red-400 to-pink-500 rounded-2xl shadow-2xl">
                <!-- 丝带 -->
                <div class="absolute top-1/2 left-0 right-0 h-2 bg-white transform -translate-y-1/2"></div>
                <div class="absolute left-1/2 top-0 bottom-0 w-2 bg-white transform -translate-x-1/2"></div>
                
                <!-- 蝴蝶结 -->
                <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-8 h-8 bg-white rounded-full"></div>
              </div>
              
              <!-- 进度条 -->
              <div id="progressBar" class="absolute -bottom-8 left-1/2 transform -translate-x-1/2 w-48 h-2 bg-gray-200 rounded-full overflow-hidden">
                <div id="progressFill" class="h-full bg-gradient-to-r from-blue-500 to-purple-500 transition-all duration-300" style="width: 0%"></div>
              </div>
            </div>
            
            <p class="text-gray-600 mt-8">左右滑动丝带解锁礼物</p>
          </div>
          
          <!-- 隐藏内容 -->
          <div id="hiddenContent" class="glass-morphism rounded-2xl p-8 opacity-0 transition-all duration-500">
            <h3 class="text-2xl font-bold text-gray-900 mb-4">🎉 惊喜！</h3>
            <p class="text-lg text-gray-700 mb-6">
              这是给你的特别礼物：<br>
              愿你的每一天都充满爱和快乐！
            </p>
            <div class="text-6xl mb-4">💕</div>
          </div>
        </div>
      </div>
      
      <!-- 步骤5: 完成页面 -->
      <div class="step" data-step="5">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <div class="glass-morphism rounded-3xl p-8 md:p-12">
            <div class="text-6xl mb-6">🎉</div>
            <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-6">
              生日快乐！
            </h2>
            <p class="text-lg text-gray-700 mb-8">
              愿你的每一天都充满爱和快乐<br>
              愿所有的美好都能实现 ✨
            </p>
            
            <div class="flex flex-col sm:flex-row justify-center gap-4">
              <button id="shareBtn" class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                分享这份快乐
              </button>
              <button id="restartBtn" class="px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">
                再来一次
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- 导航按钮 -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-20">
      <div class="flex items-center space-x-4">
        <button id="prevBtn" class="nav-button opacity-0 pointer-events-none transition-all duration-300">
          ← 上一步
        </button>
        <button id="nextBtn" class="nav-button">
          下一步 →
        </button>
      </div>
    </div>
    
    <!-- 装饰性元素 -->
    <div class="absolute top-20 left-10 w-4 h-4 bg-yellow-300 rounded-full animate-pulse"></div>
    <div class="absolute top-40 right-16 w-3 h-3 bg-pink-300 rounded-full animate-pulse" style="animation-delay: 1s;"></div>
    <div class="absolute bottom-32 left-20 w-5 h-5 bg-blue-300 rounded-full animate-pulse" style="animation-delay: 2s;"></div>
  </div>

  <!-- 彩纸动画容器 -->
  <div id="confettiContainer" class="fixed inset-0 pointer-events-none z-50"></div>
</Layout>

<script>
  // 步骤管理
  let currentStep = 1;
  const totalSteps = 5;
  
  // 初始化页面
  document.addEventListener('DOMContentLoaded', function() {
    // 设置当前日期
    const currentDate = new Date();
    const currentDateElement = document.getElementById('currentDate');
    if (currentDateElement) {
      currentDateElement.textContent = currentDate.toLocaleDateString('zh-CN');
    }
    
    // 计算在一起的天数（示例：从2023年1月1日开始）
    const startDate = new Date('2023-01-01');
    const daysTogether = Math.floor((currentDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));
    const daysTogetherElement = document.getElementById('daysTogether');
    if (daysTogetherElement) {
      daysTogetherElement.textContent = daysTogether.toString();
    }
    
    // 初始化步骤导航
    initStepNavigation();
    initCakeInteraction();
    initGiftUnlock();
    initVibration();
  });
  
  // 步骤导航
  function initStepNavigation() {
    const startBtn = document.getElementById('startBtn');
    const nextBtn = document.getElementById('nextBtn');
    const prevBtn = document.getElementById('prevBtn');
    const restartBtn = document.getElementById('restartBtn');
    
    if (startBtn) {
      startBtn.addEventListener('click', () => nextStep());
    }
    
    if (nextBtn) {
      nextBtn.addEventListener('click', () => nextStep());
    }
    
    if (prevBtn) {
      prevBtn.addEventListener('click', () => prevStep());
    }
    
    if (restartBtn) {
      restartBtn.addEventListener('click', () => goToStep(1));
    }
    
    updateStepDisplay();
  }
  
  function nextStep() {
    if (currentStep < totalSteps) {
      currentStep++;
      updateStepDisplay();
      updateNavigationButtons();
    }
  }
  
  function prevStep() {
    if (currentStep > 1) {
      currentStep--;
      updateStepDisplay();
      updateNavigationButtons();
    }
  }
  
  function goToStep(step: number) {
    currentStep = step;
    updateStepDisplay();
    updateNavigationButtons();
  }
  
  function updateStepDisplay() {
    const steps = document.querySelectorAll('.step');
    const currentStepElement = document.getElementById('currentStep');
    
    steps.forEach((step, index) => {
      const stepElement = step as HTMLElement;
      if (index + 1 === currentStep) {
        stepElement.classList.add('active');
        stepElement.style.display = 'block';
      } else {
        stepElement.classList.remove('active');
        stepElement.style.display = 'none';
      }
    });
    
    if (currentStepElement) {
      currentStepElement.textContent = currentStep.toString();
    }
  }
  
  function updateNavigationButtons() {
    const nextBtn = document.getElementById('nextBtn');
    const prevBtn = document.getElementById('prevBtn');
    
    if (prevBtn) {
      if (currentStep === 1) {
        prevBtn.style.opacity = '0';
        prevBtn.style.pointerEvents = 'none';
      } else {
        prevBtn.style.opacity = '1';
        prevBtn.style.pointerEvents = 'auto';
      }
    }
    
    if (nextBtn) {
      if (currentStep === totalSteps) {
        nextBtn.style.opacity = '0';
        nextBtn.style.pointerEvents = 'none';
      } else {
        nextBtn.style.opacity = '1';
        nextBtn.style.pointerEvents = 'auto';
      }
    }
  }
  
  // 蛋糕交互
  function initCakeInteraction() {
    const cake = document.getElementById('cake');
    const flame = document.getElementById('flame');
    let isLit = false;
    
    if (!cake || !flame) return;
    
    cake.addEventListener('click', function() {
      if (!isLit) {
        flame.style.opacity = '1';
        isLit = true;
        triggerVibration();
      }
    });
    
    cake.addEventListener('touchstart', function(e) {
      if (isLit) {
        e.preventDefault();
        startBlowTimer();
      }
    });
    
    cake.addEventListener('touchend', function() {
      if (isLit) {
        stopBlowTimer();
      }
    });
  }
  
  // 吹气计时器
  let blowTimer: ReturnType<typeof setTimeout> | undefined;
  function startBlowTimer() {
    blowTimer = setTimeout(() => {
      const flame = document.getElementById('flame');
      if (flame) {
        flame.style.opacity = '0';
      }
      createConfetti();
      triggerVibration();
      
      // 蜡烛熄灭后自动进入下一步
      setTimeout(() => {
        if (currentStep === 3) {
          nextStep();
        }
      }, 1000);
    }, 2000);
  }
  
  function stopBlowTimer() {
    if (blowTimer) {
      clearTimeout(blowTimer);
    }
  }
  
  // 礼盒解锁
  function initGiftUnlock() {
    const giftBox = document.getElementById('giftBox');
    const progressFill = document.getElementById('progressFill');
    const hiddenContent = document.getElementById('hiddenContent');
    
    if (!giftBox || !progressFill || !hiddenContent) return;
    
    let progress = 0;
    let isUnlocked = false;
    
    let startX = 0;
    let isDragging = false;
    
    giftBox.addEventListener('touchstart', function(e) {
      if (!isUnlocked) {
        startX = e.touches[0].clientX;
        isDragging = true;
      }
    });
    
    giftBox.addEventListener('touchmove', function(e) {
      if (isDragging && !isUnlocked) {
        const currentX = e.touches[0].clientX;
        const deltaX = Math.abs(currentX - startX);
        
        progress = Math.min(deltaX / 120, 1) * 100;
        progressFill.style.width = progress + '%';
        
        if (progress >= 100 && !isUnlocked) {
          isUnlocked = true;
          hiddenContent.style.opacity = '1';
          hiddenContent.style.transform = 'translateY(0)';
          triggerVibration();
          createConfetti();
          
          // 礼物解锁后自动进入下一步
          setTimeout(() => {
            if (currentStep === 4) {
              nextStep();
            }
          }, 2000);
        }
      }
    });
    
    giftBox.addEventListener('touchend', function() {
      isDragging = false;
    });
  }
  
  
  // 震动反馈
  function initVibration() {
    // 检查是否支持震动API
    if ('vibrate' in navigator) {
      (window as any).vibrate = navigator.vibrate;
    } else {
      (window as any).vibrate = function() {}; // 空函数作为兜底
    }
  }
  
  function triggerVibration() {
    if ((window as any).vibrate) {
      (window as any).vibrate(20);
    }
  }
  
  // 彩纸动画
  function createConfetti() {
    const container = document.getElementById('confettiContainer');
    if (!container) return;
    
    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD'];
    
    for (let i = 0; i < 50; i++) {
      const confetti = document.createElement('div');
      confetti.style.position = 'absolute';
      confetti.style.width = '10px';
      confetti.style.height = '10px';
      confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
      confetti.style.left = Math.random() * 100 + '%';
      confetti.style.top = '-10px';
      confetti.style.borderRadius = '50%';
      confetti.style.pointerEvents = 'none';
      
      container.appendChild(confetti);
      
      // 动画
      confetti.animate([
        { transform: 'translateY(0px) rotate(0deg)', opacity: 1 },
        { transform: `translateY(${window.innerHeight + 100}px) rotate(720deg)`, opacity: 0 }
      ], {
        duration: 3000,
        easing: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'
      }).onfinish = () => {
        confetti.remove();
      };
    }
  }
  
  // 分享功能
  const shareBtn = document.getElementById('shareBtn');
  if (shareBtn) {
    shareBtn.addEventListener('click', function() {
      if (navigator.share) {
        navigator.share({
          title: '生日快乐！',
          text: '来看看这个特别的生日祝福页面',
          url: window.location.href
        });
      } else {
        // 复制链接到剪贴板
        navigator.clipboard.writeText(window.location.href).then(() => {
          alert('链接已复制到剪贴板！');
        });
      }
    });
  }
</script>

<style>
  /* 步骤样式 */
  .step {
    display: none;
    width: 100%;
    min-height: 100vh;
    opacity: 0;
    transform: translateX(50px);
    transition: all 0.5s ease-in-out;
  }
  
  .step.active {
    display: block;
    opacity: 1;
    transform: translateX(0);
  }
  
  /* 导航按钮样式 */
  .nav-button {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 25px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
  }
  
  .nav-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
  }
  
  .nav-button:active {
    transform: translateY(0);
  }
  
  /* 玻璃态效果 */
  .glass-morphism {
    background: rgba(255, 255, 255, 0.25);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  }
  
  /* 渐变按钮 */
  .gradient-button {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    padding: 16px 32px;
    border-radius: 25px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
  }
  
  .gradient-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
  }
  
  /* 心跳动画 */
  @keyframes heartbeat {
    0% { transform: scale(1); }
    25% { transform: scale(1.1); }
    50% { transform: scale(1); }
    75% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }
  
  .animate-heartbeat {
    animation: heartbeat 2s ease-in-out infinite;
  }
  
  /* 响应式文字 */
  .text-responsive {
    font-size: 1.125rem;
  }
  
  .text-responsive-lg {
    font-size: 2.5rem;
  }
  
  @media (max-width: 768px) {
    .text-responsive {
      font-size: 1rem;
    }
    
    .text-responsive-lg {
      font-size: 2rem;
    }
  }
  
  /* 隐藏滚动条 */
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  
  .snap-x {
    scroll-snap-type: x mandatory;
  }
  
  .snap-center {
    scroll-snap-align: center;
  }
</style>
---
import Layout from "../components/Layout.astro";
---

<Layout title="生日快乐，我的宝贝 💕">
  <!-- 主容器 -->
  <div id="app" class="min-h-screen relative overflow-hidden">
    <!-- 背景渐变 -->
    <div class="absolute inset-0 bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50"></div>
    
    
    <!-- 步骤容器 -->
    <div id="stepContainer" class="relative z-10 min-h-screen flex items-center justify-center">
      
      <!-- 步骤1: 欢迎页面 -->
      <div class="step active" data-step="1">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <!-- 心跳图标 -->
          <div class="mb-8">
            <div class="inline-block animate-heartbeat">
              <div class="w-20 h-20 mx-auto bg-gradient-to-r from-red-400 to-pink-500 rounded-full flex items-center justify-center shadow-xl">
                <span class="text-white text-3xl">💖</span>
              </div>
            </div>
          </div>
          
          <!-- 名字和标题 -->
          <h1 class="text-responsive-lg font-bold text-gray-900 mb-4">
            生日快乐，<span class="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">我的宝贝</span>
          </h1>
          
          <p class="text-responsive text-gray-600 mb-12 max-w-2xl mx-auto leading-relaxed">
            愿你的每一天都像今天一样特别，愿你的笑容永远如阳光般灿烂
          </p>
          
          <!-- 开始按钮 -->
          <button id="startBtn" class="gradient-button px-8 py-4 text-lg rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300">
            🎁 开始我们的特别之旅
          </button>
        </div>
      </div>
      
      <!-- 步骤2: 我们的故事 -->
      <div class="step" data-step="2">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <div class="glass-morphism rounded-3xl p-8 md:p-12">
            <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-6">
              给最特别的你
            </h2>
            <p class="text-lg md:text-xl text-gray-700 leading-relaxed mb-8">
              从我们相遇的那一天起，每一天都因为你而变得特别。<br>
              今天是你专属的日子，愿所有的美好都围绕着你。
            </p>
            
            <!-- 日期和天数 -->
            <div class="flex flex-col md:flex-row justify-center items-center gap-8 text-gray-600">
              <div class="text-center">
                <div class="text-2xl font-bold text-blue-600" id="currentDate"></div>
                <div class="text-sm">今天</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-pink-600" id="daysTogether"></div>
                <div class="text-sm">在一起的天数</div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- 步骤3: 许愿环节 -->
      <div class="step" data-step="3">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-12">
            许个愿吧
          </h2>
          
          <!-- 简约许愿区域 -->
          <div class="glass-morphism rounded-3xl p-12 mb-8">
            <div class="text-6xl mb-6">🎂</div>
            <p class="text-xl text-gray-700 mb-8">
              闭上眼睛，许下你的生日愿望<br>
              愿所有的美好都能实现 ✨
            </p>
            <button id="wishBtn" class="gradient-button px-8 py-4 text-lg rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300">
              🌟 许愿完成
            </button>
          </div>
        </div>
      </div>
      
      <!-- 步骤4: 拆礼物 -->
      <div class="step" data-step="4">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-12">
            拆开你的礼物
          </h2>
          
          <!-- 简约礼盒 -->
          <div class="glass-morphism rounded-3xl p-12 mb-8">
            <div class="text-6xl mb-6">🎁</div>
            <p class="text-xl text-gray-700 mb-8">
              点击下面的按钮来拆开你的特别礼物
            </p>
            <button id="openGiftBtn" class="gradient-button px-8 py-4 text-lg rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300">
              🎁 拆开礼物
            </button>
          </div>
          
          <!-- 视频内容 -->
          <div id="giftContent" class="glass-morphism rounded-2xl p-8 opacity-0 transition-all duration-500 transform translate-y-8">
            <h3 class="text-2xl font-bold text-gray-900 mb-6">🎉 惊喜！</h3>
            <p class="text-lg text-gray-700 mb-6">
              这是给你的特别礼物：
            </p>
            
            <!-- 视频播放器 -->
            <div class="relative w-full max-w-2xl mx-auto">
              <video 
                id="giftVideo" 
                class="w-full h-auto rounded-xl shadow-2xl" 
                controls 
                preload="metadata"
                poster="/images/video-poster.jpg"
              >
                <source src="/videos/copy_27B269CC-2DFE-43D6-9DD7-50A9A5274ABA.MOV" type="video/quicktime">
                <source src="/videos/copy_27B269CC-2DFE-43D6-9DD7-50A9A5274ABA.mp4" type="video/mp4">
                您的浏览器不支持视频播放。
              </video>
            </div>
            
            <p class="text-lg text-gray-700 mt-6">
              愿你的每一天都充满爱和快乐！💕
            </p>
          </div>
        </div>
      </div>
      
      <!-- 步骤5: 完成页面 -->
      <div class="step" data-step="5">
        <div class="text-center px-6 max-w-4xl mx-auto">
          <div class="glass-morphism rounded-3xl p-8 md:p-12">
            <div class="text-6xl mb-6">🎉</div>
            <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-6">
              生日快乐！
            </h2>
            <p class="text-lg text-gray-700 mb-8">
              愿你的每一天都充满爱和快乐<br>
              愿所有的美好都能实现 ✨
            </p>
            
            <div class="flex flex-col sm:flex-row justify-center gap-4">
              <button id="shareBtn" class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                分享这份快乐
              </button>
              <button id="restartBtn" class="px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">
                再来一次
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- 导航按钮 -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-20">
      <div class="flex items-center space-x-4">
        <button id="prevBtn" class="nav-button opacity-0 pointer-events-none transition-all duration-300">
          ← 上一步
        </button>
        <button id="nextBtn" class="nav-button">
          下一步 →
        </button>
      </div>
    </div>
    
    <!-- 装饰性元素 -->
    <div class="absolute top-20 left-10 w-4 h-4 bg-yellow-300 rounded-full animate-pulse"></div>
    <div class="absolute top-40 right-16 w-3 h-3 bg-pink-300 rounded-full animate-pulse" style="animation-delay: 1s;"></div>
    <div class="absolute bottom-32 left-20 w-5 h-5 bg-blue-300 rounded-full animate-pulse" style="animation-delay: 2s;"></div>
  </div>

  <!-- 彩纸动画容器 -->
  <div id="confettiContainer" class="fixed inset-0 pointer-events-none z-50"></div>
</Layout>

<script>
  // 步骤管理
  let currentStep = 1;
  const totalSteps = 5;
  
  // 初始化页面
  document.addEventListener('DOMContentLoaded', function() {
    // 设置当前日期
    const currentDate = new Date();
    const currentDateElement = document.getElementById('currentDate');
    if (currentDateElement) {
      currentDateElement.textContent = currentDate.toLocaleDateString('zh-CN');
    }
    
    // 计算在一起的天数（示例：从2023年1月1日开始）
    const startDate = new Date('2023-01-01');
    const daysTogether = Math.floor((currentDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));
    const daysTogetherElement = document.getElementById('daysTogether');
    if (daysTogetherElement) {
      daysTogetherElement.textContent = daysTogether.toString();
    }
    
    // 初始化步骤导航
    initStepNavigation();
    initWishInteraction();
    initGiftInteraction();
    initVibration();
  });
  
  // 步骤导航
  function initStepNavigation() {
    const startBtn = document.getElementById('startBtn');
    const nextBtn = document.getElementById('nextBtn');
    const prevBtn = document.getElementById('prevBtn');
    const restartBtn = document.getElementById('restartBtn');
    
    if (startBtn) {
      startBtn.addEventListener('click', () => nextStep());
    }
    
    if (nextBtn) {
      nextBtn.addEventListener('click', () => nextStep());
    }
    
    if (prevBtn) {
      prevBtn.addEventListener('click', () => prevStep());
    }
    
    if (restartBtn) {
      restartBtn.addEventListener('click', () => goToStep(1));
    }
    
    updateStepDisplay();
  }
  
  function nextStep() {
    if (currentStep < totalSteps) {
      currentStep++;
      updateStepDisplay();
      updateNavigationButtons();
    }
  }
  
  function prevStep() {
    if (currentStep > 1) {
      currentStep--;
      updateStepDisplay();
      updateNavigationButtons();
    }
  }
  
  function goToStep(step: number) {
    currentStep = step;
    updateStepDisplay();
    updateNavigationButtons();
  }
  
  function updateStepDisplay() {
    const steps = document.querySelectorAll('.step');
    const currentStepElement = document.getElementById('currentStep');
    
    steps.forEach((step, index) => {
      const stepElement = step as HTMLElement;
      if (index + 1 === currentStep) {
        stepElement.classList.add('active');
        stepElement.style.display = 'block';
      } else {
        stepElement.classList.remove('active');
        stepElement.style.display = 'none';
      }
    });
    
    if (currentStepElement) {
      currentStepElement.textContent = currentStep.toString();
    }
  }
  
  function updateNavigationButtons() {
    const nextBtn = document.getElementById('nextBtn');
    const prevBtn = document.getElementById('prevBtn');
    
    if (prevBtn) {
      if (currentStep === 1) {
        prevBtn.style.opacity = '0';
        prevBtn.style.pointerEvents = 'none';
      } else {
        prevBtn.style.opacity = '1';
        prevBtn.style.pointerEvents = 'auto';
      }
    }
    
    if (nextBtn) {
      if (currentStep === totalSteps) {
        nextBtn.style.opacity = '0';
        nextBtn.style.pointerEvents = 'none';
      } else {
        nextBtn.style.opacity = '1';
        nextBtn.style.pointerEvents = 'auto';
      }
    }
  }
  
  // 许愿交互
  function initWishInteraction() {
    const wishBtn = document.getElementById('wishBtn');
    
    if (wishBtn) {
      wishBtn.addEventListener('click', function() {
        triggerVibration();
        createConfetti();
        
        // 许愿完成后自动进入下一步
        setTimeout(() => {
          if (currentStep === 3) {
            nextStep();
          }
        }, 1500);
      });
    }
  }
  
  // 礼物交互
  function initGiftInteraction() {
    const openGiftBtn = document.getElementById('openGiftBtn');
    const giftContent = document.getElementById('giftContent');
    
    if (openGiftBtn && giftContent) {
      openGiftBtn.addEventListener('click', function() {
        // 显示礼物内容
        giftContent.style.opacity = '1';
        giftContent.style.transform = 'translateY(0)';
        
        // 隐藏按钮
        openGiftBtn.style.display = 'none';
        
        triggerVibration();
        createConfetti();
        
        // 礼物打开后自动进入下一步
        setTimeout(() => {
          if (currentStep === 4) {
            nextStep();
          }
        }, 3000);
      });
    }
  }
  
  
  // 震动反馈
  function initVibration() {
    // 检查是否支持震动API
    if ('vibrate' in navigator) {
      (window as any).vibrate = navigator.vibrate;
    } else {
      (window as any).vibrate = function() {}; // 空函数作为兜底
    }
  }
  
  function triggerVibration() {
    if ((window as any).vibrate) {
      (window as any).vibrate(20);
    }
  }
  
  // 彩纸动画
  function createConfetti() {
    const container = document.getElementById('confettiContainer');
    if (!container) return;
    
    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD'];
    
    for (let i = 0; i < 50; i++) {
      const confetti = document.createElement('div');
      confetti.style.position = 'absolute';
      confetti.style.width = '10px';
      confetti.style.height = '10px';
      confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
      confetti.style.left = Math.random() * 100 + '%';
      confetti.style.top = '-10px';
      confetti.style.borderRadius = '50%';
      confetti.style.pointerEvents = 'none';
      
      container.appendChild(confetti);
      
      // 动画
      confetti.animate([
        { transform: 'translateY(0px) rotate(0deg)', opacity: 1 },
        { transform: `translateY(${window.innerHeight + 100}px) rotate(720deg)`, opacity: 0 }
      ], {
        duration: 3000,
        easing: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'
      }).onfinish = () => {
        confetti.remove();
      };
    }
  }
  
  // 分享功能
  const shareBtn = document.getElementById('shareBtn');
  if (shareBtn) {
    shareBtn.addEventListener('click', function() {
      if (navigator.share) {
        navigator.share({
          title: '生日快乐！',
          text: '来看看这个特别的生日祝福页面',
          url: window.location.href
        });
      } else {
        // 复制链接到剪贴板
        navigator.clipboard.writeText(window.location.href).then(() => {
          alert('链接已复制到剪贴板！');
        });
      }
    });
  }
</script>

<style>
  /* 步骤样式 */
  .step {
    display: none;
    width: 100%;
    min-height: 100vh;
    opacity: 0;
    transform: translateX(50px);
    transition: all 0.5s ease-in-out;
  }
  
  .step.active {
    display: block;
    opacity: 1;
    transform: translateX(0);
  }
  
  /* 导航按钮样式 */
  .nav-button {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 25px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
  }
  
  .nav-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
  }
  
  .nav-button:active {
    transform: translateY(0);
  }
  
  /* 玻璃态效果 */
  .glass-morphism {
    background: rgba(255, 255, 255, 0.25);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  }
  
  /* 渐变按钮 */
  .gradient-button {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    padding: 16px 32px;
    border-radius: 25px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
  }
  
  .gradient-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
  }
  
  /* 心跳动画 */
  @keyframes heartbeat {
    0% { transform: scale(1); }
    25% { transform: scale(1.1); }
    50% { transform: scale(1); }
    75% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }
  
  .animate-heartbeat {
    animation: heartbeat 2s ease-in-out infinite;
  }
  
  /* 响应式文字 */
  .text-responsive {
    font-size: 1.125rem;
  }
  
  .text-responsive-lg {
    font-size: 2.5rem;
  }
  
  @media (max-width: 768px) {
    .text-responsive {
      font-size: 1rem;
    }
    
    .text-responsive-lg {
      font-size: 2rem;
    }
  }
  
  /* 隐藏滚动条 */
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  
  .snap-x {
    scroll-snap-type: x mandatory;
  }
  
  .snap-center {
    scroll-snap-align: center;
  }
</style>